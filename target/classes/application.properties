spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.naming.physical-strategy = com.ecommercebackend.utils.CustomNamingStrategy
server.port=8080
ecommerce.app.jwtSecret = ecommercesecret
ecommerce.app.jwtExpirationInMs = 86400000
ecommerce.app.jwtExpirationMs = 86400000
ecommerce.app.refreshTokenExpirationInMs = 86400
ecommerce.razorpay.key = rzp_test_6i2bBxwtVUpKdh
ecommrece.razorpay.secret = u94sCZLfWUPuBYb7gkPbdOb2

spring.graphql.cors.allowed-origins = *

firebase.bucket-name=sample-131a0.appspot.com
firebase.generate-private-key-url=C:\Users\Hemanthav\Downloads\firebaseprivateKey.json
firebase.image-url=FIREBASE_IMAGE_URL

graphql.servlet.mapping=/graphql

spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.ttl=3600
spring.cache.redis.cache-null-values=true
#spring.cache.redis.time-to-live=40000
#server.servlet.context-path= /api

spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
spring.jackson.time-zone=UTC
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads

management.trace.http.enabled: true
management.endpoints.web.exposure.include=httptrace